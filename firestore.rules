rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Conversations collection - users can only access their own conversations
    match /conversations/{conversationId} {
      allow read: if request.auth != null && 
                     request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
                               request.auth.uid == resource.data.userId;
      
      // Messages subcollection within conversations
      match /messages/{messageId} {
        allow read: if request.auth != null && 
                       request.auth.uid == get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId;
        allow create: if request.auth != null && 
                         request.auth.uid == get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId;
      }
    }
    
    // Mood entries - users can only access their own mood data
    match /mood_entries/{entryId} {
      allow read: if request.auth != null && 
                     request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
                               request.auth.uid == resource.data.userId;
    }
    
    // Journal entries - users can only access their own journal data
    match /journal_entries/{entryId} {
      allow read: if request.auth != null && 
                     request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
                               request.auth.uid == resource.data.userId;
    }
  }
}
